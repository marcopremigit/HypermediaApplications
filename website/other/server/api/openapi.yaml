openapi: 3.0.0
info:
  title: Ripe4U Database APIs
  description: Here are described all the APIs needed for the HTTP requests to the
    Ripe4U website developed for the Polimi Course "Hypermedia Applications" 19/20
  version: 1.0.0
servers:
- url: https://ripe4u.herokuapp.com
  description: Main deployment server
tags:
- name: Services
  description: All database operations required for the services management
- name: Events
  description: All database operations required for the events management
- name: Volunteers
  description: All database operations required for the volunteers management
- name: Jobs
  description: All database operations required for the jobs management
- name: News
  description: All database operations required for the news management
paths:
  /volunteers:
    get:
      tags:
      - Volunteers
      description: Returns all the volunteers in the database
      operationId: volunteersGET
      parameters:
      - name: category
        in: query
        description: the category to filter the objects by
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: the limit of objects to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: the offset of the objects to retur
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
                x-content-type: application/json
        "404":
          description: Entity with specified parameters not found
      x-swagger-router-controller: Volunteers
  /volunteers/{volunteerId}:
    get:
      tags:
      - Volunteers
      description: Returns all the info bound to a volunteer by ID
      operationId: volunteersVolunteerIdGET
      parameters:
      - name: volunteerId
        in: path
        description: The volunteer ID to query for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volunteer'
        "400":
          description: Illegal input for the required operation
        "404":
          description: Entity with specified parameters not found
      x-swagger-router-controller: Volunteers
  /services:
    get:
      tags:
      - Services
      description: Returns all the services in the database
      operationId: servicesGET
      parameters:
      - name: category
        in: query
        description: the category to filter the objects by
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: the limit of objects to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: the offset of the objects to retur
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
                x-content-type: application/json
        "404":
          description: Entity with specified parameters not found
      x-swagger-router-controller: Services
  /services/{serviceId}:
    get:
      tags:
      - Services
      description: Returns all the info bound to a service by ID
      operationId: servicesServiceIdGET
      parameters:
      - name: serviceId
        in: path
        description: The service ID to query for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        "400":
          description: Illegal input for the required operation
        "404":
          description: Entity with specified parameters not found
      x-swagger-router-controller: Services
  /events:
    get:
      tags:
      - Events
      description: Returns all the events in the database
      operationId: eventsGET
      parameters:
      - name: category
        in: query
        description: the category to filter the objects by
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: the limit of objects to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: the offset of the objects to retur
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
                x-content-type: application/json
        "404":
          description: Entity with specified parameters not found
      x-swagger-router-controller: Events
  /events/{eventId}:
    get:
      tags:
      - Events
      description: Returns all the info bound to a event by ID
      operationId: eventsEventIdGET
      parameters:
      - name: eventId
        in: path
        description: The event ID to query for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        "400":
          description: Illegal input for the required operation
        "404":
          description: Entity with specified parameters not found
      x-swagger-router-controller: Events
  /jobs:
    get:
      tags:
      - Jobs
      description: Returns all the jobs in the database
      operationId: jobsGET
      parameters:
      - name: limit
        in: query
        description: the limit of objects to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: the offset of the objects to retur
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
                x-content-type: application/json
        "404":
          description: Entity with specified parameters not found
      x-swagger-router-controller: Jobs
  /jobs/{jobId}:
    get:
      tags:
      - Jobs
      description: Returns all the info bound to a job by ID
      operationId: jobsJobIdGET
      parameters:
      - name: jobId
        in: path
        description: The job ID to query for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        "400":
          description: Illegal input for the required operation
        "404":
          description: Entity with specified parameters not found
      x-swagger-router-controller: Jobs
  /news:
    get:
      tags:
      - News
      description: Returns all the news in the database
      operationId: newsGET
      parameters:
      - name: limit
        in: query
        description: the limit of objects to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: the offset of the objects to retur
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/News'
                x-content-type: application/json
        "404":
          description: Entity with specified parameters not found
      x-swagger-router-controller: News
  /news/{newsId}:
    get:
      tags:
      - News
      description: Returns all the info bound to a news by ID
      operationId: newsNewsIdGET
      parameters:
      - name: newsId
        in: path
        description: The news ID to query for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/News'
        "400":
          description: Illegal input for the required operation
        "404":
          description: Entity with specified parameters not found
      x-swagger-router-controller: News
  /volunteer_service:
    get:
      tags:
      - Volunteers
      - Services
      description: Returns id_volunteer if id_service is inserted, or id_service if
        id_volunteer is inserted
      operationId: volunteer_serviceGET
      parameters:
      - name: limit
        in: query
        description: the limit of objects to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: id_volunteer
        in: query
        description: Volunteer id
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: id_service
        in: query
        description: Service id
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                  - $ref: '#/components/schemas/Volunteer'
                  - $ref: '#/components/schemas/Service'
                x-content-type: application/json
        "400":
          description: Illegal input for the required operation
        "404":
          description: Entity with specified parameters not found
      x-swagger-router-controller: Volunteers
  /event_service:
    get:
      tags:
      - Events
      - Services
      description: Returns id_event if id_service is inserted, or id_service if id_event
        is inserted
      operationId: event_serviceGET
      parameters:
      - name: limit
        in: query
        description: the limit of objects to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: id_event
        in: query
        description: Event id
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: id_service
        in: query
        description: Service id
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                  - $ref: '#/components/schemas/Event'
                  - $ref: '#/components/schemas/Service'
                x-content-type: application/json
        "400":
          description: Illegal input for the required operation
        "404":
          description: Entity with specified parameters not found
      x-swagger-router-controller: Events
  /volunteer_event:
    get:
      tags:
      - Volunteers
      - Events
      description: Returns id_event if id_volunteer is inserted, or id_volunteer if
        id_event is inserted
      operationId: volunteer_eventGET
      parameters:
      - name: limit
        in: query
        description: the limit of objects to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: id_event
        in: query
        description: Event id
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: id_volunteer
        in: query
        description: Volunteer id
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                  - $ref: '#/components/schemas/Event'
                  - $ref: '#/components/schemas/Volunteer'
                x-content-type: application/json
        "400":
          description: Illegal input for the required operation
        "404":
          description: Entity with specified parameters not found
      x-swagger-router-controller: Volunteers
components:
  schemas:
    Volunteer:
      required:
      - category
      - id
      - image
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        image:
          type: string
        email:
          type: string
        phone:
          type: string
        description:
          type: string
        career:
          type: string
        category:
          type: string
          enum:
          - Professore
          - Studente
      example:
        image: image
        career: career
        phone: phone
        name: name
        description: description
        id: 0
        category: Professore
        email: email
    Service:
      required:
      - category
      - id
      - image
      - title
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        image:
          type: string
        description:
          type: string
        category:
          type: string
          enum:
          - Ripetizione
          - Orientamento
      example:
        image: image
        description: description
        id: 0
        title: title
        category: Ripetizione
    Event:
      required:
      - category
      - id
      - image
      - title
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        image:
          type: string
        description:
          type: string
        place:
          $ref: '#/components/schemas/Event_place'
        date_start:
          type: string
        date_end:
          type: string
        available_places:
          minimum: 0
          exclusiveMinimum: false
          type: integer
        category:
          type: string
          enum:
          - Vacanza studio
          - Colletta alimentare
          - CAG
          - Cena
          - Raccolta fondi
      example:
        image: image
        date_start: date_start
        description: description
        date_end: date_end
        id: 0
        place:
          lng: 0
          lat: 0
        available_places: 0
        title: title
        category: Vacanza studio
    Job:
      required:
      - closed
      - id
      - title
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        closed:
          type: boolean
        requirements:
          type: string
      example:
        requirements: requirements
        description: description
        closed: true
        id: 0
        title: title
    News:
      required:
      - id
      - image
      - title
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        short_description:
          type: string
        long_description:
          type: string
        image:
          type: string
      example:
        short_description: short_description
        image: image
        id: 0
        long_description: long_description
        title: title
    Event_place:
      type: object
      properties:
        lat:
          minimum: 0
          exclusiveMinimum: true
          type: integer
        lng:
          minimum: 0
          exclusiveMinimum: true
          type: integer
      example:
        lng: 0
        lat: 0
  responses:
    NotFound:
      description: Entity with specified parameters not found
    IllegalInput:
      description: Illegal input for the required operation
  parameters:
    categoryFilter:
      name: category
      in: query
      description: the category to filter the objects by
      required: false
      style: form
      explode: true
      schema:
        type: string
    limitParam:
      name: limit
      in: query
      description: the limit of objects to return
      required: false
      style: form
      explode: true
      schema:
        type: integer
        format: int32
    offsetParam:
      name: offset
      in: query
      description: the offset of the objects to retur
      required: false
      style: form
      explode: true
      schema:
        type: integer
        format: int32
